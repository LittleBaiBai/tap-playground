#@ load("@ytt:data", "data")
#@yaml/text-templated-strings

#@ if/end "api-entity-register" not in data.values.excluded_templates:
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: api-entity-register
spec:
  description: |-
    a task that generates and registers API entity based on annotations from a Workload.
  params:
    - name: tap_values
      type: string
    - name: tap_gui_url
      type: string
      description: >
        url of TAP GUI
    - name: workload_name
      type: string
      description: name of the workload
    - name: workload_namespace
      type: string
      description: namespace of the workload
  steps:
    - name: main
      image: ellerbrock/alpine-bash-curl-ssl # harbor-repo.vmware.com/dockerhub-proxy-cache/curlimages/curl
      securityContext:
        runAsUser: 0
      script: |-
        #!/usr/bin/env bash

        set -o errexit
        set -o pipefail
        set -o xtrace

        cd `mktemp -d`

        echo $(params.tap_values)

        # kubectl get ksvc $(params.workload_name) -n $(params.workload_namespace)
        # kn service $(params.workload_name) -n $(params.workload_namespace) -o url
        # data.values.deployment.url???
        # tap_gui_url=$(kubectl get secret tap-values -n tap-install -o jsonpath="{.data['tap-values\.yaml']}" | base64 -d | yq .tap_gui.app_config.backend.baseUrl)

        cat << EOF | cat > api.yaml
        ---
        apiVersion: backstage.io/v1alpha1
        kind: API
        metadata:
          name: $(params.workload_name)
          namespace: $(params.workload_namespace)
          description: The Spotify web API
          tags:
            - spotify
            - rest
        spec:
          type: openapi
          lifecycle: experimental # how can we infer lifecycle
          owner: team-a # where should we get the owner from
          definition:
            \$text: https://github.com/APIs-guru/openapi-directory/blob/dab6854d4d599aafb0eb36e6c7ae1fe0c37509b7/APIs/spotify.com/2021.4.2/openapi.yaml # todo: substitute to <workload_url>/openapi
        EOF

        curl -d @api.yaml -X POST $(params.tap_gui_url)/api/catalog/immediate/entities -H "Content-type: text/x-yaml"
